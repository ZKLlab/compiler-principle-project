(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, r0)
(comma, ,)
(ident, r1)
(comma, ,)
(ident, r2)
(comma, ,)
(ident, r3)
(semicolon, ;)
(beginsym, begin)
(ident, r0)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ident, r1)
(becomes, :=)
(number, 0)
(semicolon, ;)
(ident, r2)
(becomes, :=)
(number, 0)
(semicolon, ;)
(ident, r3)
(becomes, :=)
(number, 0)
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(rparen, ))
(semicolon, ;)
(ifsym, if)
(ident, a)
(leq, <=)
(number, 0)
(thensym, then)
(ident, r0)
(becomes, :=)
(number, 0)
(semicolon, ;)
(ifsym, if)
(ident, b)
(leq, <=)
(number, 0)
(thensym, then)
(ident, r0)
(becomes, :=)
(number, 0)
(semicolon, ;)
(ifsym, if)
(ident, c)
(leq, <=)
(number, 0)
(thensym, then)
(ident, r0)
(becomes, :=)
(number, 0)
(semicolon, ;)
(ifsym, if)
(ident, a)
(leq, <=)
(ident, b)
(plus, +)
(ident, c)
(thensym, then)
(ident, r0)
(becomes, :=)
(number, 0)
(semicolon, ;)
(ifsym, if)
(ident, b)
(leq, <=)
(ident, a)
(plus, +)
(ident, c)
(thensym, then)
(ident, r0)
(becomes, :=)
(number, 0)
(semicolon, ;)
(ifsym, if)
(ident, c)
(leq, <=)
(ident, a)
(plus, +)
(ident, b)
(thensym, then)
(ident, r0)
(becomes, :=)
(number, 0)
(semicolon, ;)
(ifsym, if)
(ident, r0)
(eql, =)
(number, 1)
(thensym, then)
(beginsym, begin)
(ifsym, if)
(ident, a)
(eql, =)
(ident, b)
(thensym, then)
(ifsym, if)
(ident, b)
(eql, =)
(ident, c)
(thensym, then)
(ident, r1)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ifsym, if)
(ident, a)
(eql, =)
(ident, b)
(thensym, then)
(ident, r2)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ifsym, if)
(ident, a)
(eql, =)
(ident, c)
(thensym, then)
(ident, r2)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ifsym, if)
(ident, b)
(eql, =)
(ident, c)
(thensym, then)
(ident, r2)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ifsym, if)
(ident, a)
(times, *)
(ident, a)
(eql, =)
(ident, b)
(times, *)
(ident, b)
(plus, +)
(ident, c)
(times, *)
(ident, c)
(thensym, then)
(ident, r3)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ifsym, if)
(ident, b)
(times, *)
(ident, b)
(eql, =)
(ident, a)
(times, *)
(ident, a)
(plus, +)
(ident, c)
(times, *)
(ident, c)
(thensym, then)
(ident, r3)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ifsym, if)
(ident, c)
(times, *)
(ident, c)
(eql, =)
(ident, a)
(times, *)
(ident, a)
(plus, +)
(ident, b)
(times, *)
(ident, b)
(thensym, then)
(ident, r3)
(becomes, :=)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, r0)
(comma, ,)
(ident, r1)
(comma, ,)
(ident, r2)
(comma, ,)
(ident, r3)
(rparen, ))
(semicolon, ;)
(endsym, end)
(period, .)
